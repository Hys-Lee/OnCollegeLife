#ifndef BLOCKS_H
#define BLOCKS_H

#include<ctime>
#include <Windows.h>

enum BLOCKS
{
	T, Sq, Z, Z_r, St, L, L_r
};



class blocks		///가로 8칸, 세로 4칸이 정사각형임, 블록이 바닥에 박히면 다른 문자로 치환하든 해서 그냥 빈공간하고 블록하고 구분
{//////////블록의 기준은 생성될 때 모양에서 맨 아래 맨 왼쪽에 두자.
public:   //////// 블록은 3으로 하자., 표현은 ㅁ으로 표현  ->이중array에서 x는 두배로 해야지 
	
	int Block_T[4][8] =
	{
		{0,0,0,0,0,0,0,0},
		{3,3,0,0,0,0,0,0},
		{3,3,3,3,0,0,0,0},
		{3,3,0,0,0,0,0,0}
	};
	int size_T[2] = { 4,3 };

	int Block_Sq[4][8] =
	{
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{3,3,3,3,0,0,0,0},
		{3,3,3,3,0,0,0,0}
	};
	int size_Sq[2] = { 4,2 };
	
	int Block_Z[4][8] =
	{
		{0,0,0,0,0,0,0,0},
		{0,0,3,3,0,0,0,0},
		{3,3,3,3,0,0,0,0},
		{3,3,0,0,0,0,0,0}
	};
	int size_Z[2] = { 4,3 };
	
	int Block_Z_r[4][8] =
	{
		{0,0,0,0,0,0,0,0},
		{3,3,0,0,0,0,0,0},
		{3,3,3,3,0,0,0,0},
		{0,0,3,3,0,0,0,0}
	};
	int size_Z_r[2] = { 4,3 };
	
	int Block_St[4][8] =
	{
		{3,3,0,0,0,0,0,0},
		{3,3,0,0,0,0,0,0},
		{3,3,0,0,0,0,0,0},
		{3,3,0,0,0,0,0,0}
	};
	int size_St[2] = { 2,4 };

	int Block_L[4][8] =
	{
		{0,0,0,0,0,0,0,0},
		{3,3,0,0,0,0,0,0},
		{3,3,0,0,0,0,0,0},
		{3,3,3,3,0,0,0,0}
	};
	int size_L[2] = { 4,3 };

	int Block_L_r[4][8] =
	{
		{0,0,0,0,0,0,0,0},
		{0,0,3,3,0,0,0,0},
		{0,0,3,3,0,0,0,0},
		{3,3,3,3,0,0,0,0}
	};
	int size_L_r[2] = { 4,3 };


	void Create(int[][8], int&, int [2]);



};

#endif BLOCKS_H

